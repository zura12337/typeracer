{"version":3,"sources":["components/NavBar.js","components/Timer.js","components/Speed.js","components/TypeDetails.js","components/TypeRacer.js","App.js","index.js"],"names":["NavBar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Timer","isActive","seconds","setSeconds","minutes","setMinutes","useEffect","timer","setInterval","clearInterval","Speed","time","totalWords","done","useState","wp","setWp","Math","ceil","TypeDetails","setTime","console","log","TypeRacer","quote","setQuote","error","setError","successChars","setSuccessChars","wordIndex","setWordIndex","charIndex","setCharIndex","nextCharIndex","setNextCharIndex","quoteArray","setQuoteArray","value","setValue","setDone","setToTalWords","split","length","slice","join","un","variable","handleChange","e","currentWord","target","localQuoteArray","onKeyDown","keyCode","succesChars","onChange","onKeyUp","disabled","autoFocus","onClick","window","location","reload","quotes","App","started","setStarted","index","floor","random","undefined","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2bb31ce.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport default function NavBar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-custom\">\n      <a className=\"navbar-brand\" href=\"/\">\n        TypeRacer\n      </a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarNavAltMarkup\"\n        aria-controls=\"navbarNavAltMarkup\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div\n        className=\"collapse navbar-collapse justify-content-end\"\n        id=\"navbarNavAltMarkup\"\n      >\n        <div className=\"navbar-nav\">\n          <a className=\"nav-item nav-link\" href=\"/\">\n            Sign In\n          </a>\n          <a id=\"button\" className=\"nav-item nav-link\" href=\"/\">\n            Register\n          </a>\n        </div>\n      </div>\n    </nav>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nexport default function Timer({\n  isActive,\n  seconds,\n  setSeconds,\n  minutes,\n  setMinutes,\n}) {\n  useEffect(() => {\n    if (isActive) {\n      if (seconds < 60) {\n        const timer = setInterval(() => {\n          setSeconds((seconds) => seconds + 1);\n        }, 1000);\n        return () => clearInterval(timer);\n      } else {\n        setMinutes((minutes) => minutes + 1);\n        setSeconds(0);\n      }\n    }\n  }, [isActive, seconds, setMinutes, setSeconds]);\n\n  return (\n    <div className=\"timer\">\n      <h3>\n        <span className=\"minutes\">\n          {minutes < 10 ? `0${minutes}` : minutes}\n        </span>\n        :\n        <span className=\"seconds\">\n          {seconds < 10 ? `0${seconds}` : seconds}\n        </span>\n      </h3>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nexport default function Speed({ time, totalWords, done }) {\n  const [wp, setWp] = useState();\n\n  useEffect(() => {\n    setWp(Math.ceil((60 / time) * totalWords * 10) / 10);\n  }, []);\n\n  return (\n    done && (\n      <div>\n        <h3>{wp && `${wp}WP`}</h3>\n      </div>\n    )\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport Timer from \"./Timer\";\nimport Speed from \"./Speed\";\n\nexport default function TypeDetails({ done, totalWords }) {\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    if (minutes !== 0) {\n      const minToSec = minutes * 60;\n      setTime(minToSec + seconds);\n    } else {\n      setTime(seconds);\n    }\n    console.log(totalWords);\n  }, [minutes, seconds, time, totalWords]);\n\n  return (\n    <div className={`type-details ${done && \"type-details-divider\"}`}>\n      <Timer\n        seconds={seconds}\n        setSeconds={setSeconds}\n        minutes={minutes}\n        setMinutes={setMinutes}\n        isActive={!done && true}\n      />\n      {done && <Speed time={time} totalWords={totalWords} done={done} />}\n    </div>\n  );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useEffect, useState } from \"react\";\nimport Timer from \"./Timer\";\nimport TypeDetails from \"./TypeDetails\";\n\nexport default function TypeRacer({ quote, setQuote }) {\n  const [error, setError] = useState(\"\");\n  const [successChars, setSuccessChars] = useState();\n  const [wordIndex, setWordIndex] = useState();\n  const [charIndex, setCharIndex] = useState();\n  const [nextCharIndex, setNextCharIndex] = useState();\n  const [quoteArray, setQuoteArray] = useState([]);\n  const [value, setValue] = useState(\"\");\n  const [done, setDone] = useState(false);\n  const [totalWords, setToTalWords] = useState();\n\n  useEffect(() => {\n    let quoteArray = quote.split(\" \");\n    setToTalWords(quoteArray.length);\n    setWordIndex(0);\n    setCharIndex(0);\n    setNextCharIndex(1);\n    quoteArray = quoteArray.slice(1);\n    quoteArray = quoteArray.join(\" \");\n    setQuote(quoteArray);\n    setQuoteArray(quote.split(\" \"));\n  }, []);\n\n  const un = (variable) => {\n    if (typeof variable !== \"undefined\") {\n      return variable;\n    } else {\n      return \"\";\n    }\n  };\n\n  const handleChange = (e) => {\n    setValue(e.target.value);\n    let currentWord;\n    if (wordIndex === quoteArray.length - 1) {\n      currentWord = quoteArray[wordIndex];\n    } else {\n      currentWord = quoteArray[wordIndex] + \" \";\n    }\n    if (e.target.value[e.target.value.length - 1] !== successChars) {\n      setError(currentWord[charIndex]);\n    }\n    if (\n      currentWord[charIndex] === e.target.value[e.target.value.length - 1] &&\n      charIndex === e.target.value.length - 1\n    ) {\n      setError(\"\");\n      setCharIndex(nextCharIndex);\n      setNextCharIndex((nextCharIndex) => nextCharIndex + 1);\n      setSuccessChars(\n        (successChars) =>\n          un(successChars) + un(e.target.value[e.target.value.length - 1])\n      );\n      if (e.target.value === currentWord) {\n        setValue(\"\");\n        setCharIndex(0);\n        setNextCharIndex(1);\n        if (quoteArray.length - 1 !== wordIndex) {\n          setWordIndex((wordIndex) => wordIndex + 1);\n        }\n        let localQuoteArray = quoteArray.slice(wordIndex + 2);\n        localQuoteArray = localQuoteArray.join(\" \");\n        setQuote(localQuoteArray);\n      }\n    } else if (e.target.value.length > value.length) {\n      setError(currentWord[charIndex]);\n    }\n    if (wordIndex + 1 === quoteArray.length) {\n      if (e.target.value === quoteArray[wordIndex]) {\n        setDone(true);\n        setWordIndex(0);\n        setCharIndex(0);\n        setNextCharIndex(1);\n      }\n    }\n  };\n\n  const onKeyDown = (e) => {\n    if (\n      e.keyCode === 8 &&\n      value.length > 0 &&\n      value.length <= quoteArray[wordIndex].length &&\n      successChars &&\n      charIndex > 0 &&\n      nextCharIndex > 1\n    ) {\n      if (\n        e.target.value.length <=\n        successChars.split(\" \")[wordIndex].length + 1\n      ) {\n        setCharIndex((charIndex) => charIndex - 1);\n        setNextCharIndex((nextCharIndex) => nextCharIndex - 1);\n        if (successChars) {\n          setSuccessChars((succesChars) =>\n            succesChars.slice(0, succesChars.length - 1)\n          );\n        }\n      }\n    }\n    if (value.length === 0) {\n      setError(\"\");\n    }\n  };\n\n  const onKeyUp = (e) => {\n    if (\n      e.keyCode === 8 &&\n      value.length > 0 &&\n      value.length <= quoteArray[wordIndex].length &&\n      successChars &&\n      charIndex > 0 &&\n      nextCharIndex > 1\n    ) {\n      if (e.target.value.length <= successChars.length + 1) {\n        if (error) {\n          setError((error) => error.slice(0, error.length - 1));\n        }\n      }\n    }\n    if (value.length === 0) {\n      setError(\"\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container quotes\">\n        <TypeDetails done={done} totalWords={totalWords} />\n        {!done ? (\n          (quoteArray,\n          wordIndex,\n          charIndex,\n          nextCharIndex && (\n            <div className=\"quote\">\n              <span className=\"quote-text success\">{successChars}</span>\n              {!error ? (\n                <span className=\"quote-text current-word\">\n                  {quoteArray[wordIndex][charIndex]}\n                </span>\n              ) : (\n                <span className=\"quote-text error\">{error}</span>\n              )}\n              <span className=\"quote-text current-word\">\n                {quoteArray[wordIndex][nextCharIndex]}\n              </span>\n              <span className=\"quote-text current-word\">\n                {quoteArray[wordIndex].slice(nextCharIndex + 1)}{\" \"}\n              </span>\n              <span className=\"quote-text\">{quote}</span>\n            </div>\n          ))\n        ) : (\n          <div className=\"quote\">\n            <span className=\"quote-text success\">{quoteArray.join(\" \")}</span>\n          </div>\n        )}\n        {!error ? (\n          <input\n            type=\"text\"\n            id=\"input\"\n            value={value}\n            onChange={handleChange}\n            className=\"input mt-5\"\n            onKeyDown={onKeyDown}\n            disabled={done && true}\n            autoFocus\n          />\n        ) : (\n          <input\n            type=\"text\"\n            id=\"input\"\n            onChange={handleChange}\n            value={value}\n            className=\"input mt-5 error\"\n            onKeyDown={onKeyDown}\n            onKeyUp={onKeyUp}\n            disabled={done && true}\n            autoFocus\n          />\n        )}\n        {done && (\n          <div className=\"text-center\">\n            <button\n              onClick={() => window.location.reload()}\n              id=\"button\"\n              className=\"btn btn-primary mt-5 \"\n            >\n              Restart\n            </button>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n","import { useState, useEffect } from \"react\";\nimport NavBar from \"./components/NavBar\";\nimport TypeRacer from \"./components/TypeRacer\";\n\nconst quotes = [\n  \"It is better to be hated for what you are than to be loved for what you are not\",\n  \"All that is gold does not glitter, Not all those who wander are lost; The old that is strong does not wither, Deep roots are not reached by the frost\",\n  \"Hello Omedia, Hello World\",\n  \"memories even you most precious ones fade surprisingly quickly\",\n];\n\nexport default function App() {\n  const [quote, setQuote] = useState();\n  const [started, setStarted] = useState(false);\n\n  useEffect(() => {\n    const index = Math.floor(Math.random() * quotes.length);\n    setQuote(quotes[index]);\n  }, []);\n\n  return (\n    <div>\n      <NavBar />\n      {!started && (\n        <div className=\"center\">\n          <button\n            onClick={() => setStarted(true)}\n            className=\"btn btn-primary\"\n            id=\"button\"\n          >\n            Start Typing!\n          </button>\n        </div>\n      )}\n      {started && quote !== undefined && (\n        <TypeRacer quote={quote} setQuote={setQuote} />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}